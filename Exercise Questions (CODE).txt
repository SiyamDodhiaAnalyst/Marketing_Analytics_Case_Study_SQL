/* 
########################
###EXERCISE QUESTIONS###
########################
*/ 

-- Most recommended film for all customers 
SELECT 
  title, 
  COUNT(*) AS frequency
FROM long_form_recommendations
GROUP BY title
ORDER BY frequency DESC; 

-- Number of emails reached/number of customers on the mailing list 
SELECT 
  COUNT(DISTINCT customer_id)
FROM long_form_recommendations;

-- The percentage coverage of recommended films compared to all films 
WITH recommended_film_covarage AS (
  SELECT
    COUNT(DISTINCT title) AS unique_reco_films
  FROM long_form_recommendations 
),  
  all_films AS (
  SELECT
    COUNT(DISTINCT title) AS unique_films
  FROM dvd_rentals.film
)
SELECT 
  unique_reco_films, 
  unique_films,
  ROUND(
    100 * unique_reco_films::NUMERIC/unique_films::NUMERIC,
    2
    ) AS coverage_percentage
  FROM recommended_film_covarage, all_films;

-- Most popular top category
  -- Fourth most popular top category
SELECT
  category_name, 
  COUNT(*) AS popularity_count
FROM first_category_insights
GROUP BY category_name
ORDER BY popularity_count DESC;

-- Average percentile for each customer in their top category
SELECT
  ROUND(AVG(percentile::NUMERIC), 2) AS avg_percentile
FROM first_category_insights;

-- The cumulative distribution of the top 5 percentile values for the top category
SELECT
  ROUND(percentile) AS percentile,
  COUNT(*),
  ROUND(100 * CUME_DIST() OVER (ORDER BY ROUND(percentile))) AS cumulative_distribution
FROM first_category_insights
GROUP BY percentile
ORDER BY percentile;

-- Median of the second category percentage 
SELECT
  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_percentage) AS median_value
FROM second_category_insights;

-- 80TH percentile of films watched featuring each customer's favourite actor
SELECT
  PERCENTILE_CONT(0.8) WITHIN GROUP (ORDER BY rental_count) AS percentile_value
FROM top_actor_counts;